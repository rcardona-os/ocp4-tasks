LoadModule request_module modules/mod_request.so
LoadModule auth_gssapi_module modules/mod_auth_gssapi.so

# Nothing needs to be served over HTTP.  This virtual host simply redirects to
# HTTPS.
<VirtualHost *:8080>
  DocumentRoot /var/www/html
  RewriteEngine              On
  RewriteRule     ^(.*)    https://%{HTTP_HOST}$1 [R,L]
</VirtualHost>

<VirtualHost *:8443>
  # This needs to match the certificates you generated.  See the CN and X509v3
  # Subject Alternative Name in the output of:
  # openssl x509 -text -in /etc/pki/tls/certs/localhost.crt
  # hostname of the proxy server
  ServerName ${SERVER_NAME}

  DocumentRoot /var/www/html
  SSLEngine on
  SSLCertificateFile /etc/pki/tls/certs/localhost.crt
  SSLCertificateKeyFile /etc/pki/tls/private/localhost.key
  SSLCACertificateFile /etc/pki/CA/certs/ca.crt

  SSLProxyEngine on
  SSLProxyCACertificateFile /etc/pki/CA/certs/ca.crt
  # It is critical to enforce client certificates. Otherwise, requests can
  # spoof the X-Remote-User header by accessing the /oauth/authorize endpoint
  # directly.
  SSLProxyMachineCertificateFile /etc/pki/tls/certs/authproxy.pem

  # To use the challenging-proxy, an X-Csrf-Token must be present.
  RewriteCond %{REQUEST_URI} ^/challenging-proxy
  RewriteCond %{HTTP:X-Csrf-Token} ^[NC]
  RewriteRule ^.* - [F,L]

    <Location /challenging-proxy/oauth/authorize>
      # Insert your backend server name/ip here.
      ProxyPass https://${NAMESPACE_ROUTE}/oauth/authorize
      AuthName "SSO Login"
      # For Kerberos
      AuthType GSSAPI
      Require valid-user
      RequestHeader set X-Remote-User %{REMOTE_USER}s
      GssapiCredStore keytab:/etc/httpd/protected/auth-proxy.keytab
      GssapiBasicAuth On
    </Location>

    <Location /login-proxy/oauth/authorize>
    # The https://<namespace_route> address is the route to the OAuth server
    # It can be obtained by running oc get route -n openshift-authentication
    ProxyPass https://${NAMESPACE_ROUTE}/oauth/authorize
      AuthName "SSO Login"
      AuthType GSSAPI
      Require valid-user
      RequestHeader set X-Remote-User %{REMOTE_USER}s env=REMOTE_USER
      GssapiCredStore keytab:/etc/httpd/protected/auth-proxy.keytab
      GssapiBasicAuth On
      ErrorDocument 401 /login.html
    </Location>

</VirtualHost>

RequestHeader unset X-Remote-User
